<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imgList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imgList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAS
        DgAAAk1TRnQBSQFMAgEBBQEAAQgBAAEIAQABEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAASADAAEBAQABCAYAAQgYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wEAAfYDdAH2A3QBRAFv
        AksBRAJMAZMwAAV0AXMBdAFSAXQBUgJMA0sBkzAAAXQBegN0AhwCdAF5BHQBRAGTMAAEdAFSAXMBHAJ5
        BXQBIwGTMAABmQFzARwDcwEcAXMBFQFzAXQBcwFLASMBSgF0MAABmQIcA5kBHAFuAUoBcwFKAksBRAFz
        AXQwAAeZAnMBkwFzAW4BcwFEAXMBmTAAB5kBSgHtAW4CcwFKAW4BdAEaMAAHmQFKAUQBSgF0AXMBbgFz
        AXQBGjAAB5kBRAIjAUsBcwEcAZkBHAGZMAAHmQFFAiMBSgFLAUoBmQEcAZkwAAaZA3QBUgFRAksDmTAA
        CZkBUgF0AZkBdAOZMAAHmQF0CJkwAAmZARoEmQEaARwwAAmZARoEmQEaARwwAAESARABDgFLAUoBAAEQ
        AUQBRQFKAUQBUQJSATEBSwX/AQcB/wHtAZIB9AX/AfIB9AH/AfMD/wH0Af8B8wH/AfQB/wHzA/8CQwER
        ARUCEgFtARMBFQJDBQ4BbAFmAQABSwEiAQ8BDgJEAUUBSwRSAUsB9gL/AfQB/wG1Af8BFQETAv8B9AP/
        AfMB9AL/AQAB9AH/AfME9AH/AfEB9AH2AbwBQwERAUMDEgHqAesCEgEUAQ4DAAEOAYsBbAEOAUsBDwFE
        AeoHSwFMAUsB/wHdAf8B7gHyAbUB/wFKAREBBwH/AQkD/wHtAfMB9AH/AQAB8gH/ARwB8QEaARsBdAG8
        AXQB9AH1Ae4BEAERAQ8BFALrAW0B6gLrARABDgEAAQ4BAAEOAWYBbAETAUsBIwFLAewFSwJvAW4BSwH2
        AbUC/wH0Ae8B/wHyAQ8B6gH2AfQB9QH/AW0B8gHxAfIBmQH/AbwB8wHvAbwBGgHyAXQB9AEaAfQBGwGZ
        AREBQwESAm0DFAESARMBFAEOAQABFQEAAQ4BDQIOARUBRQFLAesCSwRvAY0BrgFtAf8B8wEHAeoB/wHv
        Av8BbQH2Af8BswH1Aa4B7AGSAe4BmQFvARsB9AG8AQcBvAF0AfQBdAH/ARsBGgF0AZkBEQEVARIBFAFt
        AvcC7AHrARECAAFtAQABDgFDAQ4B6gFuAksB7AFuAm8B7QG0AdUBzwGLAesD9QESAf8BBwH1Af8B9AL/
        AbMB9AH3Af8B7QEcAfEBSwF0AfEBBwEcAXMBdAH0AZkCGwF0AZkBdAERARABEwHsAe8B7gGSAe8B9wFt
        AQ4CAAFtAhEBDwFDAu0BbgFvAfgBjQK0BNUBrQHrAv8BGQETB/8BswH/AbYB/wFKAUsB8wKTAfECBwHw
        AfMB/wHuARoC8wEHAZMBQwEQARMB7QIHAe0B6wGSAesBDwIAAe0C7AEOAUMB6gHtAewBtAnVAesQ/wEc
        Af8B9AL/AfQC/wIAAfQC/wEAAvQBQwERARIB7AHtAewBkgHsAesB7AHrAhEB7QHrAe0BEQEVARIBbQHP
        AbQI1QG0AesB/wHyAfEC/wLzAf8B9wH/AfQB/wHwAv8B9wH/AgAB/wEAAfQBAAH0AQAB9AEAAfQEAAEV
        AREBEgGSAe0B6wGSAe0B6wHsAZIB7wIUAQ8B+AIOARQBrgHPAe8BtAfVAbQB6wH/AeoB8QH0AeoBHAEH
        Af8BEwG8A/8BZgH1Af8CAAH/AfMB/wHwAQAB7gH/AQcB9AHyAf8DAAFEARIB7QHrAewB6wGSAW0BkgHs
        Ae8BvAHrAQ8BDgFtARUBQwGLAdUBtAG1AbQH1QG0AfgC/wHrAbwB7gGSAvMBEwH/ARIB8AHyAWwB/wGL
        AgABvAHwAfQBHAEAAe8B9AGTAf8B7QH/AwABFQHsAe8B7QGSAfcB7QESAfgB6wHvAe4B7wETAuwCFAHP
        C9UBtAH4Av8B6gHtAf8BbQH/ARMC/wESAf8BZgH/AfUBigIAAfIBvAHyAW4B/wEcAfMBkwHzAW4B/wMA
        ARMB9wHvA+0B6wHqARIBbQH4AfcBBwHtARwB9wEUARIBtAvVAc8B6wL/AW0BHAH/Ae4B/wEVAv8BFAH/
        AWYB/wGKAf8CAAH0AewB7gGTAf8B7wHzAQcBGwESAfEDAAPvAZIB+AHqARMBEgHtBAcBHAH3AZIBbAG0
        C9UBrQGLAesD/wFDAf8BFAH/ARQC/wEUAQcBZgHxAYsB9AIAAf8B9wEcAUsBvAH4AfACkwHqAfMDAAPv
        Ae0B+AHsAe8E7gEHAe8BHAH3AZIBtAvVAa0BiwFsARIH/wH0Af8B9wEHAf8B9QH/AfgB8AMAAbwB8QFu
        Af8B7gEcAZkB8gG8BAAD7wHtAfcGBwLvARwB9wGSCdUBswKtAosBbAESCv8BvAX/AwAB9AH/AfQB/wH0
        AfMB/wEAAf8EAAL3Ae8B9wHvBQcD7wH3ApIBQgFNAT4HAAE+AwABKAMAAUADAAEgAwABAQEAAQEGAAEB
        FgAD/40AARAHAAEQKAABxAYAAWoBrwYAAcIBBwYAAcIBBwYAAcABBwYAAcABBwYAAcABBwYAAeABDwYA
        AeABLwIACw==
</value>
  </data>
</root>